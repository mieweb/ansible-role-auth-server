---
# tasks/main.yml
- name: Install dependencies
  apt:
    name:
      - wget
      - curl
      - gnupg
      - ca-certificates
      - sudo
    state: present
    update_cache: yes

- name: Download Node.js
  get_url:
    url: "{{ node_url }}"
    dest: "/tmp/{{ node_dist }}.tar.xz"
    mode: '0644'

- name: Extract Node.js to /opt
  unarchive:
    src: "/tmp/{{ node_dist }}.tar.xz"
    dest: /opt
    remote_src: yes
    creates: "/opt/{{ node_dist }}"

- name: Download Meteor app
  get_url:
    url: "{{ meteor_app_url }}"
    dest: /tmp/meteor-server.tar.gz
    mode: '0644'

- name: Create app directory
  file:
    path: "{{ meteor_app_dir }}"
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Extract Meteor app
  unarchive:
    src: /tmp/meteor-server.tar.gz
    dest: "{{ meteor_app_dir }}"
    remote_src: yes

- name: Create system user for app
  user:
    name: "{{ service_user }}"
    system: yes
    shell: /usr/sbin/nologin
    group: "{{ service_group }}"
    home: "{{ meteor_app_dir }}"
    create_home: no

- name: Install Meteor app dependencies
  shell: |
    PATH=/opt/{{ node_dist }}:$PATH /opt/{{ node_dist }}/bin/npm install
  args:
    chdir: "{{ meteor_app_dir }}/bundle/programs/server"

- name: Set ownership of app directory
  file:
    path: "{{ meteor_app_dir }}"
    state: directory
    recurse: yes
    owner: "{{ service_user }}"
    group: "{{ service_group }}"

- name: Create environment file
  template:
    src: mieweb_auth_app.env.j2
    dest: /etc/default/mieweb_auth_app
    mode: '0600'

- name: Create systemd service file
  template:
    src: mieweb_auth_app.service.j2
    dest: /etc/systemd/system/mieweb_auth_app.service
    mode: '0644'

- name: Reload systemd
  systemd:
    daemon_reload: yes

- name: Enable and start mieweb_auth_app service
  systemd:
    name: mieweb_auth_app
    enabled: yes
    state: started

- name: Install NGINX
  apt:
    name: nginx
    state: present

- name: Remove default NGINX site
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name: Create SSL directory
  file:
    path: /etc/ssl/nginx
    state: directory
    owner: www-data
    group: www-data
    mode: '0700'

# You must copy your SSL certs to /etc/ssl/nginx manually or with another task

- name: Create NGINX site config
  template:
    src: mieweb_auth_app.conf.j2
    dest: /etc/nginx/sites-available/mieweb_auth_app.conf
    mode: '0644'

- name: Enable NGINX site
  file:
    src: /etc/nginx/sites-available/mieweb_auth_app.conf
    dest: /etc/nginx/sites-enabled/mieweb_auth_app.conf
    state: link
    force: yes

- name: Restart NGINX
  systemd:
    name: nginx
    state: restarted

- name: Add Cloudflare GPG key
  shell: |
    mkdir -p --mode=0755 /usr/share/keyrings
    curl -fsSL https://pkg.cloudflare.com/cloudflare-main.gpg | tee /usr/share/keyrings/cloudflare-main.gpg >/dev/null
  args:
    creates: /usr/share/keyrings/cloudflare-main.gpg

- name: Add cloudflared repo
  copy:
    dest: /etc/apt/sources.list.d/cloudflared.list
    content: "deb [signed-by=/usr/share/keyrings/cloudflare-main.gpg] https://pkg.cloudflare.com/cloudflared any main\n"
    mode: '0644'

- name: Install cloudflared
  apt:
    name: cloudflared
    state: present
    update_cache: yes

- name: Install cloudflared service
  shell: cloudflared service install {{ cloudflared_token }}
  args:
    creates: /etc/systemd/system/cloudflared.service
  when: cloudflared_token is defined and cloudflared_token != ""
